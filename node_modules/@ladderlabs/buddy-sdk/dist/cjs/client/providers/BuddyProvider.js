"use strict";
exports.__esModule = true;
exports.BuddyProvider = void 0;
var tslib_1 = require("tslib");
var Buddy_1 = require("../../models/Buddy");
var pda_1 = require("../../utils/pda");
var type_1 = require("../../utils/type");
var BuddyProvider = /** @class */ (function () {
    function BuddyProvider(program, wallet) {
        this.program = program;
        this.wallet = wallet;
    }
    BuddyProvider.prototype.isBuddyAvailable = function (name) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var buddyPDA;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        buddyPDA = (0, pda_1.getBuddyPDA)(this.program, name.toLowerCase());
                        return [4 /*yield*/, this.program.account.buddy.fetchNullable(buddyPDA)];
                    case 1: return [2 /*return*/, !!(_a.sent())];
                }
            });
        });
    };
    BuddyProvider.prototype.getAllBuddies = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var buddies;
            var _this = this;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.program.account.buddy.all()];
                    case 1:
                        buddies = (_a.sent()).map(function (buddy) {
                            return new Buddy_1.Buddy(tslib_1.__assign(tslib_1.__assign({}, buddy.account), { pda: buddy.publicKey }), _this.program, _this.wallet);
                        });
                        return [2 /*return*/, buddies];
                }
            });
        });
    };
    BuddyProvider.prototype.getByPDA = function (buddyPDA) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var buddy;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.program.account.buddy.fetchNullable(buddyPDA)];
                    case 1:
                        buddy = _a.sent();
                        if (!buddy)
                            return [2 /*return*/, null];
                        return [2 /*return*/, new Buddy_1.Buddy(tslib_1.__assign(tslib_1.__assign({}, buddy), { pda: buddyPDA }), this.program, this.wallet)];
                }
            });
        });
    };
    BuddyProvider.prototype.getByName = function (name) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var buddyPDA;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        buddyPDA = (0, pda_1.getBuddyPDA)(this.program, name.toLowerCase());
                        return [4 /*yield*/, this.getByPDA(buddyPDA)];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    BuddyProvider.prototype.getAllByProfile = function (profilePDA) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var buddies;
            var _this = this;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.program.account.buddy.all([
                            { memcmp: { offset: 8, bytes: profilePDA.toBase58() } },
                        ])];
                    case 1:
                        buddies = (_a.sent()).map(function (buddy) {
                            return new Buddy_1.Buddy(tslib_1.__assign(tslib_1.__assign({}, buddy.account), { pda: buddy.publicKey }), _this.program, _this.wallet);
                        });
                        return [2 /*return*/, buddies];
                }
            });
        });
    };
    BuddyProvider.prototype.getProfile = function (wallet) {
        var _a;
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var buddies;
            var _this = this;
            return tslib_1.__generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        if (!this.wallet && !wallet)
                            throw type_1.NO_WALLET_ERROR;
                        return [4 /*yield*/, this.program.account.buddy.all([
                                {
                                    memcmp: {
                                        offset: 8,
                                        bytes: wallet ? wallet.toBase58() : (_a = this.wallet) === null || _a === void 0 ? void 0 : _a.toBase58()
                                    }
                                },
                            ])];
                    case 1:
                        buddies = (_b.sent()).map(function (buddy) {
                            return new Buddy_1.Buddy(tslib_1.__assign(tslib_1.__assign({}, buddy.account), { pda: buddy.publicKey }), _this.program, _this.wallet);
                        });
                        //always only have 1 profile
                        return [2 /*return*/, buddies[0] || null];
                }
            });
        });
    };
    return BuddyProvider;
}());
exports.BuddyProvider = BuddyProvider;
//# sourceMappingURL=BuddyProvider.js.map