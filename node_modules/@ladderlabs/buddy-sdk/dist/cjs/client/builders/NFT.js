"use strict";
exports.__esModule = true;
exports.NFT = void 0;
var tslib_1 = require("tslib");
var web3_js_1 = require("@solana/web3.js");
var type_1 = require("../../utils/type");
var redeemPaidBuddy_1 = require("../../instructions/nft/redeemPaidBuddy");
var mintPaidBuddy_1 = require("../../instructions/nft/mintPaidBuddy");
var pda_1 = require("../../utils/pda");
var claimNFTPaidBuddy_1 = require("../../instructions/nft/claimNFTPaidBuddy");
var claimNFTOrganization_1 = require("../../instructions/nft/claimNFTOrganization");
var NFT = /** @class */ (function () {
    function NFT(program, wallet) {
        this.program = program;
        this.wallet = wallet;
    }
    NFT.prototype.generateNftMint = function () {
        return web3_js_1.Keypair.generate();
    };
    NFT.prototype.claimNFTOrganization = function (organizationName, options, nftMint) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var organizationPDA;
            return tslib_1.__generator(this, function (_a) {
                if (!this.wallet)
                    throw type_1.NO_WALLET_ERROR;
                organizationPDA = (0, pda_1.getOrganizationPDA)(this.program, organizationName.toLowerCase());
                return [2 /*return*/, (0, claimNFTOrganization_1.claimNFTOrganization)(this.program, this.wallet, organizationPDA, organizationName.toLowerCase(), options, nftMint)];
            });
        });
    };
    NFT.prototype.claimNFTPaidBuddy = function (buddyProfilePDA, paidBuddyName, nftMint) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var paidBuddyPDA;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!this.wallet)
                            throw type_1.NO_WALLET_ERROR;
                        paidBuddyPDA = (0, pda_1.getBuddyPDA)(this.program, paidBuddyName.toLowerCase());
                        return [4 /*yield*/, (0, claimNFTPaidBuddy_1.claimNFTPaidBuddy)(this.program, this.wallet, buddyProfilePDA, paidBuddyPDA, nftMint)];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    NFT.prototype.redeemPaidBuddy = function (buddyProfilePDA, paidBuddyPDA, nftMint) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!this.wallet)
                            throw type_1.NO_WALLET_ERROR;
                        return [4 /*yield*/, (0, redeemPaidBuddy_1.redeemPaidBuddy)(this.program, this.wallet, buddyProfilePDA, paidBuddyPDA, nftMint)];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    NFT.prototype.mintPaidBuddy = function (buddyProfilePDA, paidBuddyPDA, generatedMintAddress, collectionMint) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!this.wallet)
                            throw type_1.NO_WALLET_ERROR;
                        return [4 /*yield*/, (0, mintPaidBuddy_1.mintPaidBuddy)(this.program, this.wallet, buddyProfilePDA, paidBuddyPDA, generatedMintAddress, collectionMint)];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    return NFT;
}());
exports.NFT = NFT;
//# sourceMappingURL=NFT.js.map