"use strict";
exports.__esModule = true;
exports.Initializer = void 0;
var tslib_1 = require("tslib");
var initTreasury_1 = require("../../instructions/init/initTreasury");
var pda_1 = require("../../utils/pda");
var type_1 = require("../../utils/type");
var parse_1 = require("../../utils/parse");
var initOrganization_1 = require("../../instructions/init/initOrganization");
var initProfile_1 = require("../../instructions/init/initProfile");
var initMember_1 = require("../../instructions/init/initMember");
var Client_1 = require("../Client");
var initMasterTreasury_1 = require("../../instructions/init/initMasterTreasury");
var initMemberStatistics_1 = require("../../instructions/init/initMemberStatistics");
var Initializer = /** @class */ (function () {
    function Initializer(program, wallet) {
        this.program = program;
        this.wallet = wallet;
    }
    Initializer.prototype.inject = function (usdcMint) {
        this.usdcMint = usdcMint;
        return this;
    };
    Initializer.prototype.isReferrerValid = function (referrerHash, organizationName) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var isMember, memberPDA, refNames, refPDAs, _i, refNames_1, name_1, i, buddy;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!referrerHash)
                            return [2 /*return*/, false];
                        return [4 /*yield*/, this.isReferrerMember(organizationName === null || organizationName === void 0 ? void 0 : organizationName.toLowerCase(), referrerHash)];
                    case 1:
                        isMember = _a.sent();
                        if (!isMember) return [3 /*break*/, 3];
                        memberPDA = (0, pda_1.getMemberPDA)(this.program, organizationName === null || organizationName === void 0 ? void 0 : organizationName.toLowerCase(), referrerHash);
                        return [4 /*yield*/, this.program.account.member.fetchNullable(memberPDA)];
                    case 2: return [2 /*return*/, !!(_a.sent())];
                    case 3:
                        refNames = Client_1.Client.decryptHash(referrerHash)[0];
                        refPDAs = [];
                        for (_i = 0, refNames_1 = refNames; _i < refNames_1.length; _i++) {
                            name_1 = refNames_1[_i];
                            refPDAs.push((0, pda_1.getBuddyPDA)(this.program, name_1));
                        }
                        i = 0;
                        _a.label = 4;
                    case 4:
                        if (!(i < refPDAs.length)) return [3 /*break*/, 7];
                        return [4 /*yield*/, this.program.account.buddy.fetchNullable(refPDAs[i])];
                    case 5:
                        buddy = _a.sent();
                        if (!buddy)
                            return [2 /*return*/, false];
                        _a.label = 6;
                    case 6:
                        i++;
                        return [3 /*break*/, 4];
                    case 7: return [2 /*return*/, true];
                }
            });
        });
    };
    Initializer.prototype.createMasterTreasury = function (mint) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!this.wallet)
                            throw type_1.NO_WALLET_ERROR;
                        return [4 /*yield*/, (0, initMasterTreasury_1.initMasterTreasury)(this.program, this.wallet, mint)];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    Initializer.prototype.createMemberStatistics = function (organizationName, memberName) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var organizationPDA, organizationAccount, organization;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!this.wallet)
                            throw type_1.NO_WALLET_ERROR;
                        organizationPDA = (0, pda_1.getOrganizationPDA)(this.program, organizationName.toLowerCase());
                        return [4 /*yield*/, this.program.account.organization.fetchNullable(organizationPDA)];
                    case 1:
                        organizationAccount = _a.sent();
                        if (!organizationAccount)
                            throw type_1.ORGANIZATION_NOT_EXIST.replace("{}", organizationName.toLowerCase());
                        organization = tslib_1.__assign({ pda: organizationPDA }, organizationAccount);
                        return [4 /*yield*/, (0, initMemberStatistics_1.initMemberStatistics)(this.program, this.wallet, memberName, organization)];
                    case 2: return [2 /*return*/, [_a.sent()]];
                }
            });
        });
    };
    Initializer.prototype.createMemberWithRewards = function (organizationName, memberName, rewardsMint, referrerHash, // can be member name or buddy name or shared treasury
    payer, buddyName) {
        var _a, _b;
        if (rewardsMint === void 0) { rewardsMint = null; }
        if (payer === void 0) { payer = null; }
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var instructions, organizationPDA, organizationAccount, organization, buddyPDA, buddyProfile, isReferrerMember, buddyProfilePDA, creatingProfile, buddyProfileName, buddyReferrer, _c, _d, _e, _f, mainBuddy, fetchedBuddy, fetchedProfile, ownerTreasuryPDA, ownerTreasury, _g, _h, _j, ownerTreasuryRewardsPDA, ownerTreasuryRewards, _k, _l, _m, referrers, referrerTreasuryPDA, _o, refNames, shares, refPDAs, _i, refNames_2, name_2, referrerTreasury, _p, _q, _r, referrerTreasuryRewardsPDA, referrerTreasuryRewards, _s, _t, _u, i, ownerTreasuryPDA_1, buddy, member, memberName_1, _v, _w, memberPDA, member, treasury, referrerTreasuryRewardsPDA, referrerTreasuryRewards, _x, _y, _z, _0, _1;
            return tslib_1.__generator(this, function (_2) {
                switch (_2.label) {
                    case 0:
                        if (!this.wallet)
                            throw type_1.NO_WALLET_ERROR;
                        instructions = [];
                        organizationPDA = (0, pda_1.getOrganizationPDA)(this.program, organizationName.toLowerCase());
                        return [4 /*yield*/, this.program.account.organization.fetchNullable(organizationPDA)];
                    case 1:
                        organizationAccount = _2.sent();
                        if (!organizationAccount)
                            throw type_1.ORGANIZATION_NOT_EXIST.replace("{}", organizationName.toLowerCase());
                        organization = tslib_1.__assign({ pda: organizationPDA }, organizationAccount);
                        buddyPDA = (0, pda_1.getBuddyPDA)(this.program, memberName.toLowerCase());
                        return [4 /*yield*/, this.program.account.buddy.all([
                                { memcmp: { offset: 8, bytes: this.wallet.toBase58() } },
                            ])];
                    case 2:
                        buddyProfile = (_2.sent())[0];
                        return [4 /*yield*/, this.isReferrerMember(organizationName.toLowerCase(), referrerHash)];
                    case 3:
                        isReferrerMember = _2.sent();
                        buddyProfilePDA = buddyProfile === null || buddyProfile === void 0 ? void 0 : buddyProfile.publicKey;
                        creatingProfile = false;
                        if (!!buddyProfilePDA) return [3 /*break*/, 8];
                        buddyProfileName = buddyName ? buddyName : Client_1.Client.generateProfileName();
                        buddyProfilePDA = (0, pda_1.getBuddyPDA)(this.program, buddyProfileName);
                        if (!isReferrerMember) return [3 /*break*/, 5];
                        return [4 /*yield*/, this.getBuddyReferrer(organizationName.toLowerCase(), referrerHash)];
                    case 4:
                        _c = _2.sent();
                        return [3 /*break*/, 6];
                    case 5:
                        _c = referrerHash;
                        _2.label = 6;
                    case 6:
                        buddyReferrer = _c;
                        _e = (_d = instructions.push).apply;
                        _f = [instructions];
                        return [4 /*yield*/, this.createProfile(buddyProfileName, buddyReferrer, (0, parse_1.parsePublicKey)(organization.mainTokenMint)
                                ? organization.mainTokenMint
                                : undefined, payer)];
                    case 7:
                        _e.apply(_d, _f.concat([(_2.sent())]));
                        creatingProfile = true;
                        _2.label = 8;
                    case 8:
                        mainBuddy = null;
                        return [4 /*yield*/, this.program.account.buddy.fetchNullable(buddyPDA)];
                    case 9:
                        fetchedBuddy = _2.sent();
                        if (!fetchedBuddy) return [3 /*break*/, 13];
                        if (!(((_a = fetchedBuddy === null || fetchedBuddy === void 0 ? void 0 : fetchedBuddy.authority) === null || _a === void 0 ? void 0 : _a.toString()) !== this.wallet.toString())) return [3 /*break*/, 11];
                        return [4 /*yield*/, this.program.account.buddy.fetchNullable(fetchedBuddy === null || fetchedBuddy === void 0 ? void 0 : fetchedBuddy.authority)];
                    case 10:
                        fetchedProfile = _2.sent();
                        if (((_b = fetchedProfile === null || fetchedProfile === void 0 ? void 0 : fetchedProfile.authority) === null || _b === void 0 ? void 0 : _b.toString()) !== this.wallet.toString()) {
                            mainBuddy = tslib_1.__assign(tslib_1.__assign({}, ((buddyProfile === null || buddyProfile === void 0 ? void 0 : buddyProfile.account) || {})), { pda: buddyProfilePDA });
                        }
                        else {
                            mainBuddy = tslib_1.__assign(tslib_1.__assign({}, fetchedBuddy), { pda: buddyPDA });
                        }
                        return [3 /*break*/, 12];
                    case 11:
                        mainBuddy = tslib_1.__assign(tslib_1.__assign({}, fetchedBuddy), { pda: buddyPDA });
                        _2.label = 12;
                    case 12: return [3 /*break*/, 14];
                    case 13:
                        mainBuddy = tslib_1.__assign(tslib_1.__assign({}, ((buddyProfile === null || buddyProfile === void 0 ? void 0 : buddyProfile.account) || {})), { pda: buddyProfilePDA });
                        _2.label = 14;
                    case 14:
                        ownerTreasuryPDA = (0, pda_1.getTreasuryPDA)(this.program, [mainBuddy === null || mainBuddy === void 0 ? void 0 : mainBuddy.pda], [10000], (0, parse_1.parsePublicKey)(organization.mainTokenMint));
                        return [4 /*yield*/, this.program.account.treasury.fetchNullable(ownerTreasuryPDA)];
                    case 15:
                        ownerTreasury = _2.sent();
                        if (!!ownerTreasury) return [3 /*break*/, 17];
                        _h = (_g = instructions.push).apply;
                        _j = [instructions];
                        return [4 /*yield*/, this.createTreasuryByBuddyPDA(mainBuddy === null || mainBuddy === void 0 ? void 0 : mainBuddy.pda, (0, parse_1.parsePublicKey)(organization.mainTokenMint)
                                ? organization.mainTokenMint
                                : undefined)];
                    case 16:
                        _h.apply(_g, _j.concat([(_2.sent())]));
                        _2.label = 17;
                    case 17:
                        if (!(rewardsMint &&
                            rewardsMint.toString() !== organization.mainTokenMint.toString())) return [3 /*break*/, 20];
                        ownerTreasuryRewardsPDA = (0, pda_1.getTreasuryPDA)(this.program, [mainBuddy === null || mainBuddy === void 0 ? void 0 : mainBuddy.pda], [10000], (0, parse_1.parsePublicKey)(rewardsMint));
                        return [4 /*yield*/, this.program.account.treasury.fetchNullable(ownerTreasuryRewardsPDA)];
                    case 18:
                        ownerTreasuryRewards = _2.sent();
                        if (!!ownerTreasuryRewards) return [3 /*break*/, 20];
                        _l = (_k = instructions.push).apply;
                        _m = [instructions];
                        return [4 /*yield*/, this.createTreasuryByBuddyPDA(mainBuddy === null || mainBuddy === void 0 ? void 0 : mainBuddy.pda, (0, parse_1.parsePublicKey)(rewardsMint) ? rewardsMint : undefined)];
                    case 19:
                        _l.apply(_k, _m.concat([(_2.sent())]));
                        _2.label = 20;
                    case 20:
                        referrers = [];
                        referrerTreasuryPDA = null;
                        if (!referrerHash) return [3 /*break*/, 41];
                        _o = Client_1.Client.decryptHash(referrerHash), refNames = _o[0], shares = _o[1];
                        if (!!isReferrerMember) return [3 /*break*/, 34];
                        refPDAs = [];
                        for (_i = 0, refNames_2 = refNames; _i < refNames_2.length; _i++) {
                            name_2 = refNames_2[_i];
                            refPDAs.push((0, pda_1.getBuddyPDA)(this.program, name_2));
                        }
                        referrerTreasuryPDA = (0, pda_1.getTreasuryPDA)(this.program, refPDAs, shares, (0, parse_1.parsePublicKey)(organization.mainTokenMint));
                        if (!!creatingProfile) return [3 /*break*/, 23];
                        return [4 /*yield*/, this.program.account.treasury.fetchNullable(referrerTreasuryPDA)];
                    case 21:
                        referrerTreasury = _2.sent();
                        if (!!referrerTreasury) return [3 /*break*/, 23];
                        _q = (_p = instructions.push).apply;
                        _r = [instructions];
                        return [4 /*yield*/, this.createSharedTreasuryByPDA(refPDAs, shares, (0, parse_1.parsePublicKey)(organization.mainTokenMint)
                                ? organization.mainTokenMint
                                : undefined)];
                    case 22:
                        _q.apply(_p, _r.concat([(_2.sent())]));
                        _2.label = 23;
                    case 23:
                        if (!(rewardsMint &&
                            rewardsMint.toString() !== organization.mainTokenMint.toString())) return [3 /*break*/, 26];
                        referrerTreasuryRewardsPDA = (0, pda_1.getTreasuryPDA)(this.program, refPDAs, shares, (0, parse_1.parsePublicKey)(rewardsMint));
                        return [4 /*yield*/, this.program.account.treasury.fetchNullable(referrerTreasuryRewardsPDA)];
                    case 24:
                        referrerTreasuryRewards = _2.sent();
                        if (!!referrerTreasuryRewards) return [3 /*break*/, 26];
                        _t = (_s = instructions.push).apply;
                        _u = [instructions];
                        return [4 /*yield*/, this.createSharedTreasuryByPDA(refPDAs, shares, (0, parse_1.parsePublicKey)(rewardsMint) ? rewardsMint : undefined)];
                    case 25:
                        _t.apply(_s, _u.concat([(_2.sent())]));
                        _2.label = 26;
                    case 26:
                        i = 0;
                        _2.label = 27;
                    case 27:
                        if (!(i < refPDAs.length)) return [3 /*break*/, 33];
                        ownerTreasuryPDA_1 = (0, pda_1.getTreasuryPDA)(this.program, [refPDAs[i]], [10000], (0, parse_1.parsePublicKey)(organization.mainTokenMint));
                        return [4 /*yield*/, this.program.account.buddy.fetchNullable(refPDAs[i])];
                    case 28:
                        buddy = _2.sent();
                        if (!buddy) {
                            referrers = [];
                            referrerTreasuryPDA = null;
                            return [3 /*break*/, 33];
                        }
                        return [4 /*yield*/, this.program.account.member.all([
                                { memcmp: { offset: 41, bytes: ownerTreasuryPDA_1.toBase58() } },
                            ])];
                    case 29:
                        member = (_2.sent())[0];
                        memberName_1 = buddy.name;
                        if (member) {
                            memberName_1 = member.account.name;
                        }
                        if (!!member) return [3 /*break*/, 31];
                        _w = (_v = instructions).push;
                        return [4 /*yield*/, this.createReferrerMember(organization, memberName_1, tslib_1.__assign({ pda: refPDAs[i] }, buddy), payer)];
                    case 30:
                        _w.apply(_v, [_2.sent()]);
                        _2.label = 31;
                    case 31:
                        referrers.push({ buddyPDA: refPDAs[i] });
                        _2.label = 32;
                    case 32:
                        i++;
                        return [3 /*break*/, 27];
                    case 33: return [3 /*break*/, 41];
                    case 34:
                        memberPDA = (0, pda_1.getMemberPDA)(this.program, organizationName.toLowerCase(), refNames[0]);
                        return [4 /*yield*/, this.program.account.member.fetchNullable(memberPDA)];
                    case 35:
                        member = _2.sent();
                        if (!member) return [3 /*break*/, 40];
                        return [4 /*yield*/, this.program.account.treasury.fetchNullable(member.owner)];
                    case 36:
                        treasury = _2.sent();
                        if (!treasury) return [3 /*break*/, 39];
                        referrers.push({ buddyPDA: treasury.owners[0].ownerPda });
                        referrerTreasuryPDA = member.owner;
                        if (!(rewardsMint &&
                            rewardsMint.toString() !== organization.mainTokenMint.toString())) return [3 /*break*/, 39];
                        referrerTreasuryRewardsPDA = (0, pda_1.getTreasuryPDA)(this.program, [treasury.owners[0].ownerPda], [10000], (0, parse_1.parsePublicKey)(rewardsMint));
                        return [4 /*yield*/, this.program.account.treasury.fetchNullable(referrerTreasuryRewardsPDA)];
                    case 37:
                        referrerTreasuryRewards = _2.sent();
                        if (!!referrerTreasuryRewards) return [3 /*break*/, 39];
                        _y = (_x = instructions.push).apply;
                        _z = [instructions];
                        return [4 /*yield*/, this.createSharedTreasuryByPDA([treasury.owners[0].ownerPda], [10000], (0, parse_1.parsePublicKey)(rewardsMint) ? rewardsMint : undefined)];
                    case 38:
                        _y.apply(_x, _z.concat([(_2.sent())]));
                        _2.label = 39;
                    case 39: return [3 /*break*/, 41];
                    case 40:
                        referrers = [];
                        referrerTreasuryPDA = null;
                        _2.label = 41;
                    case 41:
                        _1 = (_0 = instructions).push;
                        return [4 /*yield*/, (0, initMember_1.initMember)(this.program, this.wallet, memberName.toLowerCase(), organization, mainBuddy, tslib_1.__assign({ pda: buddyProfilePDA }, ((buddyProfile === null || buddyProfile === void 0 ? void 0 : buddyProfile.account) || {})), referrers, referrerTreasuryPDA)];
                    case 42:
                        _1.apply(_0, [_2.sent()]);
                        return [2 /*return*/, instructions];
                }
            });
        });
    };
    Initializer.prototype.createMember = function (organizationName, memberName, referrerHash, // can be member name or buddy name or shared treasury
    payer, buddyName) {
        if (payer === void 0) { payer = null; }
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.createMemberWithRewards(organizationName.toLowerCase(), memberName.toLowerCase(), null, referrerHash, payer, buddyName)];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    Initializer.prototype.createReferrerMember = function (organization, memberName, buddy, payer) {
        var _a;
        if (payer === void 0) { payer = null; }
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var buddyProfile, mainBuddy, fetchedBuddyProfile;
            return tslib_1.__generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        if (!this.wallet)
                            throw type_1.NO_WALLET_ERROR;
                        if (!buddy)
                            throw type_1.BUDDY_DOESNT_EXIST;
                        buddyProfile = null;
                        mainBuddy = null;
                        if (!!((_a = buddy === null || buddy === void 0 ? void 0 : buddy.buddyType) === null || _a === void 0 ? void 0 : _a.profile)) return [3 /*break*/, 2];
                        return [4 /*yield*/, this.program.account.buddy.fetchNullable(buddy.authority)];
                    case 1:
                        fetchedBuddyProfile = _b.sent();
                        buddyProfile = tslib_1.__assign({ pda: buddy.authority }, fetchedBuddyProfile);
                        mainBuddy = tslib_1.__assign({}, buddy);
                        return [3 /*break*/, 3];
                    case 2:
                        buddyProfile = tslib_1.__assign({}, buddy);
                        mainBuddy = tslib_1.__assign({}, buddy);
                        _b.label = 3;
                    case 3: return [4 /*yield*/, (0, initMember_1.initMember)(this.program, this.wallet, memberName.toLowerCase(), organization, mainBuddy, buddyProfile, [], null, payer)];
                    case 4: return [2 /*return*/, _b.sent()];
                }
            });
        });
    };
    Initializer.prototype.createProfile = function (buddyName, referralHash, // assumes always buddy
    mint, payer) {
        if (payer === void 0) { payer = null; }
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var instructions, referrerTreasuryPDA, _a, owners, shares, buddyPDAs, fetchBuddies, _i, owners_1, name_3, budPDA, buddies, referrerTreasury, _b, _c, _d, _e, _f;
            return tslib_1.__generator(this, function (_g) {
                switch (_g.label) {
                    case 0:
                        if (!this.wallet)
                            throw type_1.NO_WALLET_ERROR;
                        instructions = [];
                        if (!referralHash) return [3 /*break*/, 4];
                        _a = Client_1.Client.decryptHash(referralHash), owners = _a[0], shares = _a[1];
                        buddyPDAs = [];
                        fetchBuddies = [];
                        for (_i = 0, owners_1 = owners; _i < owners_1.length; _i++) {
                            name_3 = owners_1[_i];
                            budPDA = (0, pda_1.getBuddyPDA)(this.program, name_3);
                            buddyPDAs.push(budPDA);
                            fetchBuddies.push(this.program.account.buddy.fetchNullable(budPDA));
                        }
                        return [4 /*yield*/, Promise.all(fetchBuddies)];
                    case 1:
                        buddies = _g.sent();
                        if (!!buddies.some(function (bud) { return bud === null; })) return [3 /*break*/, 4];
                        referrerTreasuryPDA = (0, pda_1.getTreasuryPDA)(this.program, buddyPDAs, shares, (0, parse_1.parsePublicKey)(mint));
                        return [4 /*yield*/, this.program.account.treasury.fetchNullable(referrerTreasuryPDA)];
                    case 2:
                        referrerTreasury = _g.sent();
                        if (!!referrerTreasury) return [3 /*break*/, 4];
                        _c = (_b = instructions.push).apply;
                        _d = [instructions];
                        return [4 /*yield*/, this.createSharedTreasuryByPDA(buddyPDAs, shares, mint)];
                    case 3:
                        _c.apply(_b, _d.concat([(_g.sent())]));
                        _g.label = 4;
                    case 4:
                        _f = (_e = instructions).push;
                        return [4 /*yield*/, (0, initProfile_1.initProfile)(this.program, this.wallet, buddyName.toLowerCase(), referrerTreasuryPDA, payer)];
                    case 5:
                        _f.apply(_e, [_g.sent()]);
                        return [2 /*return*/, instructions];
                }
            });
        });
    };
    Initializer.prototype.createOrganization = function (name, options, ambassadorName) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var ambassadorPDA, ambassadorBPS, masterOrg;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!this.wallet)
                            throw type_1.NO_WALLET_ERROR;
                        ambassadorPDA = null, ambassadorBPS = null;
                        if (!ambassadorName) return [3 /*break*/, 2];
                        ambassadorPDA = (0, pda_1.getAmbassadorPDA)(this.program, ambassadorName.toLowerCase());
                        return [4 /*yield*/, this.program.account.masterOrganization.all()];
                    case 1:
                        masterOrg = (_a.sent())[0];
                        ambassadorBPS = masterOrg.account.ambassadorShareKeptInBps;
                        _a.label = 2;
                    case 2: return [4 /*yield*/, (0, initOrganization_1.initOrganization)(this.program, this.wallet, name.toLowerCase(), options, ambassadorPDA, ambassadorBPS, this.usdcMint ? this.usdcMint : type_1.USDC_MINT)];
                    case 3: return [2 /*return*/, [
                            _a.sent()
                        ]];
                }
            });
        });
    };
    Initializer.prototype.createSharedTreasuryByHash = function (hash, mint) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var _a, buddyNames, shares;
            return tslib_1.__generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        _a = Client_1.Client.decryptHash(hash), buddyNames = _a[0], shares = _a[1];
                        return [4 /*yield*/, this.createSharedTreasuryByName(buddyNames, shares, mint)];
                    case 1: return [2 /*return*/, _b.sent()];
                }
            });
        });
    };
    Initializer.prototype.createTreasuryByName = function (buddyName, mint) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var buddyPDA;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        buddyPDA = (0, pda_1.getBuddyPDA)(this.program, buddyName.toLowerCase());
                        return [4 /*yield*/, this.createTreasuryByBuddyPDA(buddyPDA, mint)];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    Initializer.prototype.createTreasuryByBuddyPDA = function (buddyPDA, mint) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!this.wallet)
                            throw type_1.NO_WALLET_ERROR;
                        return [4 /*yield*/, (0, initTreasury_1.initTreasury)(this.program, this.wallet, [buddyPDA], [10000], (0, parse_1.parsePublicKey)(mint))];
                    case 1: return [2 /*return*/, [
                            _a.sent()
                        ]];
                }
            });
        });
    };
    Initializer.prototype.createSharedTreasuryByName = function (buddyNames, shares, mint) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var buddyPDAs, _i, buddyNames_1, name_4;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        buddyPDAs = [];
                        for (_i = 0, buddyNames_1 = buddyNames; _i < buddyNames_1.length; _i++) {
                            name_4 = buddyNames_1[_i];
                            buddyPDAs.push((0, pda_1.getBuddyPDA)(this.program, name_4.toLowerCase()));
                        }
                        return [4 /*yield*/, this.createSharedTreasuryByPDA(buddyPDAs, shares, mint)];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    Initializer.prototype.createSharedTreasuryByPDA = function (buddyPDAs, shares, mint) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!this.wallet)
                            throw type_1.NO_WALLET_ERROR;
                        return [4 /*yield*/, (0, initTreasury_1.initTreasury)(this.program, this.wallet, buddyPDAs, shares, (0, parse_1.parsePublicKey)(mint))];
                    case 1: return [2 /*return*/, [
                            _a.sent()
                        ]];
                }
            });
        });
    };
    Initializer.prototype.getBuddyReferrer = function (organizationName, referrerHash) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var owners, memberPDA, member, treasury, buddy;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!(referrerHash && !referrerHash.endsWith("$"))) return [3 /*break*/, 4];
                        owners = Client_1.Client.decryptHash(referrerHash)[0];
                        memberPDA = (0, pda_1.getMemberPDA)(this.program, organizationName.toLowerCase(), owners[0]);
                        return [4 /*yield*/, this.program.account.member.fetchNullable(memberPDA)];
                    case 1:
                        member = _a.sent();
                        if (!member)
                            return [2 /*return*/, ""];
                        return [4 /*yield*/, this.program.account.treasury.fetchNullable(member.owner)];
                    case 2:
                        treasury = _a.sent();
                        if (!treasury)
                            return [2 /*return*/, ""];
                        return [4 /*yield*/, this.program.account.buddy.fetchNullable(treasury === null || treasury === void 0 ? void 0 : treasury.owners[0].ownerPda)];
                    case 3:
                        buddy = _a.sent();
                        return [2 /*return*/, (buddy === null || buddy === void 0 ? void 0 : buddy.name) || ""];
                    case 4: return [2 /*return*/, referrerHash];
                }
            });
        });
    };
    Initializer.prototype.isReferrerMember = function (organizationName, referrer) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var owners, memberPDA;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!organizationName)
                            return [2 /*return*/, false];
                        if (!(referrer && !referrer.endsWith("$"))) return [3 /*break*/, 2];
                        owners = Client_1.Client.decryptHash(referrer)[0];
                        memberPDA = (0, pda_1.getMemberPDA)(this.program, organizationName.toLowerCase(), owners[0]);
                        return [4 /*yield*/, this.program.account.member.fetchNullable(memberPDA)];
                    case 1: return [2 /*return*/, !!(_a.sent())];
                    case 2: return [2 /*return*/, false];
                }
            });
        });
    };
    return Initializer;
}());
exports.Initializer = Initializer;
//# sourceMappingURL=Initializer.js.map