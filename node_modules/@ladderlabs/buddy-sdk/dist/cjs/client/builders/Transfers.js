"use strict";
exports.__esModule = true;
exports.Transfer = void 0;
var tslib_1 = require("tslib");
var web3_js_1 = require("@solana/web3.js");
var type_1 = require("../../utils/type");
var parse_1 = require("../../utils/parse");
var transferRewards_1 = require("../../instructions/transfers/transferRewards");
var transferRewardsNoMultiLevel_1 = require("../../instructions/transfers/transferRewardsNoMultiLevel");
var transferRewardsWithBPS_1 = require("../../instructions/transfers/transferRewardsWithBPS");
var transferRewardsGlobalBuddies_1 = require("../../instructions/transfers/transferRewardsGlobalBuddies");
var transferRewardsStarAtlas_1 = require("../../instructions/transfers/transferRewardsStarAtlas");
var Transfer = /** @class */ (function () {
    function Transfer(program, wallet) {
        this.program = program;
        this.wallet = wallet;
    }
    Transfer.prototype.getProgramId = function () {
        return this.program.programId;
    };
    Transfer.prototype.transferRewards = function (memberPDA, amount, mint, allowMultiLevel, allowStats) {
        if (allowMultiLevel === void 0) { allowMultiLevel = true; }
        if (allowStats === void 0) { allowStats = true; }
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!this.wallet)
                            throw type_1.NO_WALLET_ERROR;
                        return [4 /*yield*/, (0, transferRewards_1.transferRewards)(this.program, this.wallet, memberPDA, amount, allowMultiLevel, allowStats, (0, parse_1.parsePublicKey)(mint) ? mint : web3_js_1.PublicKey["default"])];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    Transfer.prototype.transferRewardsNoMultiLevel = function (receiveMemberPDA, amount, mint, allowStats) {
        if (allowStats === void 0) { allowStats = true; }
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!this.wallet)
                            throw type_1.NO_WALLET_ERROR;
                        return [4 /*yield*/, (0, transferRewardsNoMultiLevel_1.transferRewardsNoMultiLevel)(this.program, this.wallet, receiveMemberPDA, amount, (0, parse_1.parsePublicKey)(mint) ? mint : web3_js_1.PublicKey["default"], allowStats)];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    Transfer.prototype.transferRewardsWithBPS = function (memberPDA, amount, mint, allowMultiLevel, allowStats) {
        if (allowMultiLevel === void 0) { allowMultiLevel = true; }
        if (allowStats === void 0) { allowStats = true; }
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!this.wallet)
                            throw type_1.NO_WALLET_ERROR;
                        return [4 /*yield*/, (0, transferRewardsWithBPS_1.transferRewardsWithBPS)(this.program, this.wallet, memberPDA, amount, allowMultiLevel, (0, parse_1.parsePublicKey)(mint) ? mint : web3_js_1.PublicKey["default"], allowStats)];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    Transfer.prototype.transferRewardsGlobalBuddies = function (buddyPDA, amount, mint) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!this.wallet)
                            throw type_1.NO_WALLET_ERROR;
                        return [4 /*yield*/, (0, transferRewardsGlobalBuddies_1.transferRewardsGlobalBuddies)(this.program, this.wallet, buddyPDA, amount, (0, parse_1.parsePublicKey)(mint) ? mint : web3_js_1.PublicKey["default"])];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    Transfer.prototype.transferRewardsStarAtlas = function (amount, volume, memberPDA, mint, allowStats, programSigner) {
        if (allowStats === void 0) { allowStats = true; }
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!this.wallet)
                            throw type_1.NO_WALLET_ERROR;
                        return [4 /*yield*/, (0, transferRewardsStarAtlas_1.transferRewardsStarAtlas)(this.program, this.wallet, mint, allowStats, amount, volume, programSigner, memberPDA)];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    return Transfer;
}());
exports.Transfer = Transfer;
//# sourceMappingURL=Transfers.js.map