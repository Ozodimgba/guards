/// <reference types="node" />
/// <reference types="bn.js" />
import { PublicKey, TransactionInstruction } from "@solana/web3.js";
import { BuddyGlobalReferrer, RewardReceived } from "../utils/type";
import { Treasury } from "./Treasury";
import { Buddylink } from "../idl/buddylink";
import { Program } from "@project-serum/anchor";
import * as anchor from "@project-serum/anchor";
export interface MemberAccount {
    pda: PublicKey;
    bump: number;
    referrer: PublicKey;
    owner: PublicKey;
    globalReferrerOfBuddy: BuddyGlobalReferrer;
    name: string;
    paddingName: Buffer;
    organization: string;
    paddingOrganization: Buffer;
    created: anchor.BN;
    rewardsReceived: RewardReceived[];
    numberRewardsTracked: number;
}
export interface MemberStatisticsAccount {
    pda: PublicKey;
    member: PublicKey;
    totalReferrerVolume: anchor.BN;
    numberOfClaimedRewards: anchor.BN;
    numberOfClaimedRewardsInVolume: anchor.BN;
    lastClaimed: anchor.BN;
}
export declare class Member {
    private program;
    account: MemberAccount;
    wallet?: PublicKey;
    constructor(member: MemberAccount, program: Program<Buddylink>, wallet?: PublicKey);
    refresh(): Promise<this>;
    getStatistics(): Promise<MemberStatisticsAccount | null>;
    getReferrer(): Promise<Treasury | null>;
    getOwner(): Promise<Treasury>;
    getTotalReferred(): Promise<number>;
    claimStarAtlas(amount: number, mint?: PublicKey): Promise<TransactionInstruction[]>;
}
