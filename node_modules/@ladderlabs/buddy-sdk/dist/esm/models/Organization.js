import { __assign, __awaiter, __generator } from "tslib";
var Organization = /** @class */ (function () {
    function Organization(organization, program, wallet) {
        this.wallet = wallet;
        this.account = organization;
        this.program = program;
    }
    Organization.prototype.refresh = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _a, _b;
            return __generator(this, function (_c) {
                switch (_c.label) {
                    case 0:
                        _a = this;
                        _b = [{ pda: this.account.pda }];
                        return [4 /*yield*/, this.program.account.organization.fetch(this.account.pda)];
                    case 1:
                        _a.account = __assign.apply(void 0, _b.concat([(_c.sent())]));
                        return [2 /*return*/, this];
                }
            });
        });
    };
    return Organization;
}());
export { Organization };
//# sourceMappingURL=Organization.js.map