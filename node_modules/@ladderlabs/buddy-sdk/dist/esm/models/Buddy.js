import { __assign, __awaiter, __generator } from "tslib";
import { NO_WALLET_ERROR, ONLY_PROFILE_BUY, USDC_MINT, } from "../utils/type";
import { initGlobalBuddy } from "../instructions/init/initGlobalBuddy";
var Buddy = /** @class */ (function () {
    function Buddy(buddy, program, wallet) {
        this.account = buddy;
        this.program = program;
        this.wallet = wallet;
    }
    Buddy.prototype.refresh = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _a, _b;
            return __generator(this, function (_c) {
                switch (_c.label) {
                    case 0:
                        _a = this;
                        _b = [{ pda: this.account.pda }];
                        return [4 /*yield*/, this.program.account.buddy.fetch(this.account.pda)];
                    case 1:
                        _a.account = __assign.apply(void 0, _b.concat([(_c.sent())]));
                        return [2 /*return*/, this];
                }
            });
        });
    };
    Buddy.prototype.buyGlobalBuddy = function (buddyName) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!this.wallet)
                            throw NO_WALLET_ERROR;
                        if (!this.account.buddyType.profile)
                            throw ONLY_PROFILE_BUY;
                        return [4 /*yield*/, initGlobalBuddy(this.program, this.wallet, buddyName, this.account, this.usdcMint ? this.usdcMint : USDC_MINT)];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    Buddy.prototype.inject = function (usdcMint) {
        this.usdcMint = usdcMint;
        return this;
    };
    return Buddy;
}());
export { Buddy };
//# sourceMappingURL=Buddy.js.map