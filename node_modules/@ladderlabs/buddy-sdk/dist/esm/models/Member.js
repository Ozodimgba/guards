import { __assign, __awaiter, __generator } from "tslib";
import { NO_WALLET_ERROR, OWNER_BUDDY_DOESNT_EXIST } from "../utils/type";
import { Treasury } from "./Treasury";
import { getMemberStatisticPDA } from "../utils/pda";
import { claimStarAtlasInstruction } from "../instructions/claim/claimStarAtlas";
var Member = /** @class */ (function () {
    function Member(member, program, wallet) {
        this.account = member;
        this.wallet = wallet;
        this.program = program;
    }
    Member.prototype.refresh = function () {
        return __awaiter(this, void 0, void 0, function () {
            var member;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.program.account.member.fetch(this.account.pda)];
                    case 1:
                        member = _a.sent();
                        this.account = __assign({ pda: this.account.pda }, member);
                        return [2 /*return*/, this];
                }
            });
        });
    };
    Member.prototype.getStatistics = function () {
        return __awaiter(this, void 0, void 0, function () {
            var statsPDA, stats;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        statsPDA = getMemberStatisticPDA(this.program, this.account.organization, this.account.pda);
                        return [4 /*yield*/, this.program.account.memberStatistics.fetchNullable(statsPDA)];
                    case 1:
                        stats = _a.sent();
                        return [2 /*return*/, stats ? __assign({ pda: statsPDA }, stats) : null];
                }
            });
        });
    };
    Member.prototype.getReferrer = function () {
        return __awaiter(this, void 0, void 0, function () {
            var treasury;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.program.account.treasury.fetchNullable(this.account.referrer)];
                    case 1:
                        treasury = _a.sent();
                        if (treasury)
                            return [2 /*return*/, new Treasury(__assign(__assign({}, treasury), { pda: this.account.referrer }), this.program, this.wallet)];
                        return [2 /*return*/, null];
                }
            });
        });
    };
    Member.prototype.getOwner = function () {
        return __awaiter(this, void 0, void 0, function () {
            var treasury;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.program.account.treasury.fetchNullable(this.account.owner)];
                    case 1:
                        treasury = _a.sent();
                        if (!treasury)
                            throw !OWNER_BUDDY_DOESNT_EXIST;
                        return [2 /*return*/, new Treasury(__assign(__assign({}, treasury), { pda: this.account.owner }), this.program, this.wallet)];
                }
            });
        });
    };
    Member.prototype.getTotalReferred = function () {
        return __awaiter(this, void 0, void 0, function () {
            var members;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.program.account.member.all([
                            {
                                memcmp: {
                                    offset: 9,
                                    bytes: this.account.owner.toBase58()
                                }
                            },
                        ])];
                    case 1:
                        members = _a.sent();
                        return [2 /*return*/, members.length];
                }
            });
        });
    };
    Member.prototype.claimStarAtlas = function (amount, mint) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!this.wallet)
                            throw NO_WALLET_ERROR;
                        return [4 /*yield*/, claimStarAtlasInstruction(this.program, this.wallet, this.account, amount, mint)];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    return Member;
}());
export { Member };
//# sourceMappingURL=Member.js.map