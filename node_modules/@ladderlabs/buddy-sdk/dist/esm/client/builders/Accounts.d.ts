import { Program } from "@project-serum/anchor";
import { Buddylink } from "../../idl/buddylink";
import { PublicKey } from "@solana/web3.js";
export declare class Accounts {
    private program;
    constructor(program: Program<Buddylink>);
    validateReferrerAccounts(mint: PublicKey, memberPDA?: PublicKey, allowStats?: boolean): Promise<{
        programId: PublicKey;
        buddyProfile: PublicKey;
        buddy: PublicKey;
        buddyTreasury: PublicKey;
        memberPDA: PublicKey;
        referrerMember: PublicKey | null;
        referrerTreasury: PublicKey;
        referrerTreasuryReward: PublicKey;
        mint: PublicKey;
        referrerATA: PublicKey;
    }>;
    transferRewardsAccount(memberPDA?: PublicKey, mint?: PublicKey, allowStats?: boolean): Promise<{
        referrerAccount: PublicKey;
        referrerAccountRewards: PublicKey;
        referreeAccount: PublicKey;
        globalReferrerTreasury: PublicKey;
        globalReferrerTokenAccount: PublicKey;
        mint: PublicKey;
        referrerTokenAccount: PublicKey;
        referrerMemberAccount?: undefined;
    } | {
        referrerMemberAccount: PublicKey | null;
        referrerAccount: PublicKey;
        referrerAccountRewards: PublicKey;
        referreeAccount: PublicKey;
        globalReferrerTreasury: PublicKey;
        globalReferrerTokenAccount: PublicKey;
        mint: PublicKey;
        referrerTokenAccount: PublicKey;
    }>;
    transferRewardsNoGlobalAccount(memberPDA?: PublicKey, mint?: PublicKey, allowStats?: boolean): Promise<{
        referrerMember: PublicKey;
        referrerTreasury: PublicKey;
        referrerTreasuryRewards: PublicKey;
        referrerMemberStatistics: PublicKey;
        buddyProfile: PublicKey;
        buddy: PublicKey;
        buddyTreasury: PublicKey;
        member: PublicKey;
        referrerTokenAccount: PublicKey;
        mint: PublicKey;
        programId: PublicKey;
    }>;
    transferRewardsOptimisticAccount(profileName: string, // can only be profile
    memberName: string, organizationName: string, mint: PublicKey, referrerName?: string): Promise<{
        referrerMember: PublicKey;
        referrerTreasury: PublicKey;
        referrerTreasuryRewards: PublicKey;
        referrerMemberStatistics: PublicKey;
        buddyProfile: PublicKey;
        buddy: PublicKey;
        buddyTreasury: PublicKey;
        member: PublicKey;
        referrerTokenAccount: PublicKey | null;
        mint: PublicKey;
        programId: PublicKey;
    }>;
}
