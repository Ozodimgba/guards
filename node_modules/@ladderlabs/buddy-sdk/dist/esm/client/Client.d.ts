import { Connection, PublicKey } from "@solana/web3.js";
import { OrganizationProvider } from "./providers/OrganizationProvider";
import { MemberProvider } from "./providers/MemberProvider";
import { TreasuryProvider } from "./providers/TreasuryProvider";
import { BuddyProvider } from "./providers/BuddyProvider";
import { Transfer } from "./builders/Transfers";
import { Initializer } from "./builders/Initializer";
import { AmbassadorProvider } from "./providers/AmbassadorProvider";
import { NFT } from "./builders/NFT";
import { PDA } from "./providers/PDA";
import { Accounts } from "./builders/Accounts";
export declare class Client {
    private program;
    accounts: Accounts;
    organization: OrganizationProvider;
    member: MemberProvider;
    treasury: TreasuryProvider;
    buddy: BuddyProvider;
    ambassador: AmbassadorProvider;
    transfer: Transfer;
    initialize: Initializer;
    nft: NFT;
    pda: PDA;
    constructor(connection: Connection, wallet?: PublicKey, programId?: string);
    inject(wallet: PublicKey): this;
    getProgramId(): PublicKey;
    static generateProfileName(): string;
    static generateMemberName(): string;
    static decryptHash(hash: string): [string[], number[]];
    static encryptHash(owners: string[], shares: number[]): string;
}
