/// <reference types="node" />
import * as anchor from "@project-serum/anchor";
import { Program } from "@project-serum/anchor";
import { PublicKey, TransactionInstruction } from "@solana/web3.js";
import { Buddylink } from "../idl/buddylink";
export declare function increaseComputeLimit(newLimit?: number): TransactionInstruction;
export declare function getOrganizationPDA(program: Program<Buddylink>, name: string): anchor.web3.PublicKey;
export declare function getOrganizationNamePDA(program: Program<Buddylink>, name: string): anchor.web3.PublicKey;
export declare function getBuddyPDA(program: Program<Buddylink>, name: string): anchor.web3.PublicKey;
export declare function getBuddyNameProfilePDA(program: Program<Buddylink>, wallet: PublicKey): anchor.web3.PublicKey;
export declare function getBuddyNamePDA(program: Program<Buddylink>, name: string): anchor.web3.PublicKey;
export declare function getMemberPDA(program: Program<Buddylink>, organization: string, name: string): anchor.web3.PublicKey;
export declare function getMemberNamePDA(program: Program<Buddylink>, organizationName: string, wallet: PublicKey): anchor.web3.PublicKey;
export declare function getHashTreasury(owners: PublicKey[], shares: number[]): Buffer;
export declare function getTreasuryPDAByHash(program: Program<Buddylink>, hash: Buffer, mint: PublicKey | null): anchor.web3.PublicKey;
export declare function getTreasuryPDA(program: Program<Buddylink>, owners: PublicKey[], shares: number[], mint: PublicKey | null): anchor.web3.PublicKey;
export declare function getTokenAccount(account: PublicKey, mint: PublicKey, isOffCurve?: boolean): Promise<anchor.web3.PublicKey | null>;
export declare function getAmbassadorPDA(program: Program<Buddylink>, name: string): anchor.web3.PublicKey;
export declare function getMasterTreasuryPDA(program: Program<Buddylink>, mint: PublicKey): anchor.web3.PublicKey;
export declare function getBlSignerPDA(program: Program<Buddylink>): PublicKey;
export declare function getMemberStatisticPDA(program: Program<Buddylink>, organizationName: string, memberPDA: PublicKey): PublicKey;
export declare function findMasterEdition(mint: anchor.web3.PublicKey): anchor.web3.PublicKey;
export declare function findMetadataAddress(mint: anchor.web3.PublicKey): anchor.web3.PublicKey;
export declare function findBLDataMetadataAddress(mint: anchor.web3.PublicKey, programId: PublicKey): anchor.web3.PublicKey;
